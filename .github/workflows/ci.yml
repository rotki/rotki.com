name: ci

on:
  push:
    branches:
      - main
      - staging
      - develop
  pull_request:
    branches:
      - main
      - staging
      - develop
jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v3

      - name: Setup node env 🏗
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ~/.cache/Cypress/
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies 👨🏻‍💻
        run: pnpm install

      - name: Run linter 👀
        run: pnpm run lint:all

      - name: Build 🚧
        run: pnpm run build

      - name: Run tests ✅
        run: pnpm run test

      - name: Run cypress tests
        uses: cypress-io/github-action@v5
        with:
          start: pnpm run dev
          browser: chrome
          wait-on: 'http://localhost:3000'
          install: false

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: e2e-screenshots
          path: tests/e2e/screenshots
          retention-days: 7

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-videos
          path: tests/e2e/videos
          retention-days: 7

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build docker image
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: rotki/frontend:latest
